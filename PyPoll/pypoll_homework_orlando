{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 7,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Election Results\n",
      "--------------------------\n",
      "Total Votes: 3521001\n",
      "--------------------------\n",
      "Khan: 63.0% (2218231)\n",
      "Correy: 20.0% (704200)\n",
      "Li: 14.0% (492940)\n",
      "O'Tooley: 3.0% (105630)\n",
      "--------------------------\n",
      "Winner:  Khan\n",
      "--------------------------\n"
     ]
    }
   ],
   "source": [
    "import os\n",
    "import csv\n",
    "\n",
    "# declare variables\n",
    "candidates = []\n",
    "number_votes = 0\n",
    "vote_counts = []\n",
    "\n",
    "election_data = ['1']\n",
    "\n",
    "# start for loop through file\n",
    "for files in election_data:\n",
    "    #find csv file\n",
    "    election_dataCSV = csvpath = os.path.join(\"election_data.csv\")\n",
    "       \n",
    "    with open(election_dataCSV) as csvfile:\n",
    "        \n",
    "        csvreader = csv.reader(csvfile, delimiter=',')\n",
    "        \n",
    "        line = next(csvreader,None)\n",
    "        \n",
    "        # nested for Loop\n",
    "        for line in csvreader:\n",
    "            \n",
    "            #establish vote count\n",
    "            number_votes = number_votes +1\n",
    "            \n",
    "            # establish candidate\n",
    "            candidate = line[2]\n",
    "            \n",
    "            # add votes to candidate total\n",
    "            if candidate in candidates:\n",
    "                candidate_index = candidates.index(candidate)\n",
    "                vote_counts[candidate_index] = vote_counts[candidate_index] + 1\n",
    "                \n",
    "                # make new spot for candidate in list\n",
    "            else:\n",
    "                candidates.append(candidate)\n",
    "                vote_counts.append(1)\n",
    "                \n",
    "    #more variables:\n",
    "    percentages = []\n",
    "    max_votes = vote_counts[0]\n",
    "    max_index = 0\n",
    "    \n",
    "    #loop for percentages and winner\n",
    "    for count in range(len(candidates)):\n",
    "        vote_percentage = vote_counts[count]/number_votes*100\n",
    "        percentages.append(vote_percentage)\n",
    "        if vote_counts[count] > max_votes:\n",
    "            max_votes = vote_counts[count]\n",
    "            print(max_votes)\n",
    "            max_index = count\n",
    "    winner = candidates[max_index]\n",
    "    \n",
    "    percentages = [round(i,2) for i in percentages]\n",
    "    \n",
    "    # summary of results\n",
    "    print(\"Election Results\")\n",
    "    print(\"--------------------------\")\n",
    "    print(f\"Total Votes: {number_votes}\")\n",
    "    print(\"--------------------------\")\n",
    "    for count in range(len(candidates)):\n",
    "        print(f\"{candidates[count]}: {percentages[count]}% ({vote_counts[count]})\")\n",
    "    print(\"--------------------------\")\n",
    "    print(f\"Winner:  {winner}\")\n",
    "    print(\"--------------------------\")\n",
    "    \n",
    "    #write file with results\n",
    "    output_file = election_dataCSV[0:-4]\n",
    "    \n",
    "    write_election_dataCSV = f\"{output_file}pypoll_results_orlando.txt\"\n",
    "    \n",
    "    filewriter = open(write_election_dataCSV, mode = 'w')\n",
    "    \n",
    "    # write results to export file\n",
    "    filewriter.write(\"Election Results\\n\")\n",
    "    filewriter.write(\"-----------------------------\\n\")\n",
    "    filewriter.write(f\"Total Votes:  {number_votes}\\n\")\n",
    "    filewriter.write(\"-----------------------------\\n\")\n",
    "    for count in range(len(candidates)):\n",
    "        filewriter.write(f\"{candidates[count]}: {percentages[count]}% ({vote_counts[count]})\\n\")\n",
    "    filewriter.write(\"-----------------------------\\n\")\n",
    "    filewriter.write(f\"Winner:  {winner}\\n\")\n",
    "    filewriter.write(\"-----------------------------\\n\")\n",
    "    \n",
    "    \n",
    "    # Close File\n",
    "    filewriter.close()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.7.3"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 4
}
